After several abortive attempts of trying to use [HTML5 Application
cache](http://developers.whatwg.org/offline.html), I decided to turn
[Greptweet](http://greptweet.com/) into an offline capable Web application and
I learnt a ton along the way.

If you have [code](https://github.com/kaihendry/Greptweet/blob/86dfd044aa458342c4d8e46b00f1e95dbcb72508/main.js#L24) in your application that looks like:

	if (navigator.onLine) {
		// Do something server side
	} else {
		// Do something locally
	}

You are probably doing it **wrong**. Why?

The `navigator.onLine` attribute is inherently unreliable. "A computer can be
connected to a network without having Internet access." as
<http://developers.whatwg.org/offline.html#browser-state> says and as my
[suckless](http://suckless.org) compatriots point out: Aside from **physical
link state**, there is no way to tell the difference between an 'offline'
network and a highly latent one. Again **physical link state** doesn't help you
if your cable connected to your router is offline or you use wireless.
Microsoft determines Internet connectivity by pinging one of their
servers(!).

It gets worse if you are a <abbr title="linux user">luser</abbr> because if you
are sane and shun bloatware like [dbus](http://en.wikipedia.org/wiki/D-Bus) and
the bonkers [Network Manager](http://projects.gnome.org/NetworkManager/) then
`navigator.onLine` will simply not report `false` on a typical Linux distribution like
[Debian](http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=681782) or
[Archlinux](https://bugs.archlinux.org/task/30704) when offline. [Linux
Chrome](https://code.google.com/p/chromium/issues/detail?id=137501) for example
[depends on
org.freedesktop.NetworkManager](http://src.chromium.org/svn/trunk/src/net/base/network_change_notifier_linux.cc) to work.

Whilst developing under Archlinux, Firefox's "Work offline" feature was a god
send. Though Chrome's developer tools is much better to examine the Application
Cache under the Resources section.

So what's the alternative to using `navigator.onLine`? I think individual Web
apps need to determine `navigator.onLine` themselves by doing a http request to
their Web site and if you don't get a 200 in x seconds you set your own
`navigator.onLine` variable to false. I know at least one [Web
signage](http://neon.webconverger.com/) application that does this already.
It's obviously important for a public sign to stay robust and work offline in
the case of spotty internet connectivity.

After writing [Greptweet](http://greptweet.com/) with [Offline HTML
Appcache](http://www.whatwg.org/specs/web-apps/current-work/multipage/offline.html#offline)
features, I don't think I need
[grep.php](https://github.com/kaihendry/Greptweet/blob/6a68fb722e69a3753bf85ec80b9454077ebf37fb/grep.php)
anymore. So another approach is to rely on sync using the cache manifest and
localStorage, and design your Web application not to act on application data
remotely.
