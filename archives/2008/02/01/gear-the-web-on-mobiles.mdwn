[[!meta title="Gear the Web on mobiles" ]]
[[!meta date="2008-02-01 11:11:47" ]]
<a href="http://www.flickr.com/photos/hendry/2230733688/" title="android on dwm by Kai Hendry, on Flickr"><img src="http://farm3.static.flickr.com/2272/2230733688_13a572da48_m.jpg" width="240" height="150" alt="android on dwm" /></a>

<p>Update (3/3/2008): <a href="http://google-code-updates.blogspot.com/2008/03/power-up-your-mobile-web-applications.html">We&#8217;re also working to bring <strong>Google Gears for mobile to Android</strong> and other mobile platforms with capable web browsers.</a></p>

<p>Here is my writeup of yesterdays Android Code Day in London.</p>

<p>Eclipse 3.3 is needed to get the plugin working. Only <a href="http://packages.qa.debian.org/e/eclipse.html">eclipse 3.2 is in Debian unstable</a>. <a href="http://www.eclipse.org/downloads/">Download the Europa release</a> and <a href="http://code.google.com/android/intro/installing.html#installingplugin">re-setting up the plugin will do it.</a> I&#8217;m no Eclipse fan boy, though the integrated debugger works. The iteration cycles are really short for trying stuff out. Very good.</p>

<p>Developers, mainly from a <a href="http://www.symbian.com/">Symbian</a> background grilled Jason Chen over security and wanting C <span class="caps">API</span> access. Lot of people didn&#8217;t seem to like the idea that users were controlling security. I like Google&#8217;s &#8220;empowering the users&#8221; stance, though I think representatives from operators don&#8217;t. I heard that poor argument about users asking their operators for android support. Jason argued well that it&#8217;s up to user education to contact the right people. When a computer crashes in the UK, who do people call? <a href="http://webconverger.org/blog/entry/UK_Internet/">VirginMedia</a>? Please! :) How about <a href="http://code.google.com/p/google-breakpad/">Breakpad crash reporting on Android?</a>. Jason used the <a href="http://www.openhandsetalliance.com/"><span class="caps">OHA</span></a> to defend Google from looking like they have all the political power&#8230; Hmmmm. :)</p>

<p>I can understand the tight rope that Google are walking. They are trying not to fragment their platform before it&#8217;s properly released. OEMs, operators <strong>will</strong> feck it up if they have the chance to play with the source code before a Google co-ordinated release. Once they release Google claim they will release everything under the <a href="http://www.apache.org/licenses/LICENSE-2.0.html">Apache 2 license</a>. So I asked could we see Android on desktops? Jason said there is nothing stopping you. I hope not. Their opened fonts and multimedia codecs on desktop PCs could really make a <strong>big difference</strong> for Linux take up, especially in Asian (growth) markets. I have <a href="http://natalian.org/archives/2007/05/31/chinese-font/">studied and implemented Asian fonts</a> and Android&#8217;s font rendering even on that nightmare Website <a href="http://www.sina.com.cn/">sina</a> looked good to me.</p>

<p>Despite the &#8220;Symbian developers&#8221; giving Jason hell in the beginning I had impression they actually liked Android. It fealt almost staged. Scary. Symbian C++ programmers learning Java and jumping ship!</p>

<p>Same old problems with images. People are concerned about how bitmap images will scale on different <strong>target screens</strong>. There is four &#8216;skins&#8217; already supported in the emulator (QVGA-L+P, <span class="caps">HVGA</span>-L+P). We need <a href="http://natalian.org/archives/2005/01/21/images/">scalable images</a> too on the Web. ;) Though there are some workarounds demonstrated which seemed OK to me.</p>

<p>During the hackathon, I wanted to write a backup/sync tool. Since only Jason Chen seemed to know Android and there was a filled audience, I didn&#8217;t get to ask him how really to go about coding it. Though with the help of Dave from <a href="https://zyb.com/">Zyb</a>, we eventually found out about <a href="http://code.google.com/android/devel/data/contentproviders.html">content providers</a>. Took some debugging to find that out, but we got there. Having a working debugger is really really nice. We discovered we needed &#8220;android.permission.READ_CONTACTS&#8221; in the manifest to make our little application that read out the contact on stdout. Cool, though I&#8217;d rather use Javascript and the Web stack. Anyway, Android seemed like a good platform, but I have concerns.</p>

<p>My biggest concern is basically where is <a href="http://gears.google.com/">Google Gears</a> on Android? Jason could neither confirm or deny this, so perhaps they have it. Though <a href="http://groups.google.com/group/google-gears-eng/">gears is an opensource project and you can see code reviews&#8230; no Android mentioned</a>.</p>

<p>What happens if the Android platform is wildly successful? Then we are going to see <strong>two</strong> major platforms. The Android platform on mobiles and the Web platform on everything else. I worryingly saw no support for <a href="http://www.openajax.org/member/wiki/Mobile_Device_APIs">Web application device APIs</a> on Android. Encouraging people to write for their Android/java-esque platform undermines their main Web platform! It&#8217;s like <a href="http://www.joelonsoftware.com/articles/APIWar.html">Microsoft&#8217;s mistake of undermining their own platform</a> all over again.</p>

<p>From Android you can use Webkit and the Web stack. But from the Web <span class="caps">API</span> stack you can&#8217;t seemingly access their Dalvik VM APIs. I disclose I am an employee of <a href="http://www.aplixcorp.com">Aplix</a> (opinions etc. are my own), also a <a href="http://www.openhandsetalliance.com/oha_members.html"><span class="caps">OHA</span> member</a>. I am actively working on a <a href="http://wiki.webvm.net/">plugin technology that exposes APIs as familiar JS APIs to Web developers</a>. I have already done a <a href="http://plugin.webvm.net/307/">proof of concept implementation of Google Gear&#8217;s Location <span class="caps">API</span></a> on mobile devices with Aplix technologies.</p>

<p>Google you should really do the same and make Web applications equal citizens on your mobile platform by implementing Gears on Android (if you haven&#8217;t already).</p>